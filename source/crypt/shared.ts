import AL from "alclient-mongo"
import { CryptData } from "../definitions/bot"

export const cryptPath: AL.IPosition[] = [
    { map: "crypt", x: 0, y: 0 },
    { map: "crypt", x: 0, y: -100 },
    { map: "crypt", x: 0, y: -200 },
    { map: "crypt", x: 0, y: -300 },
    { map: "crypt", x: 0, y: -400 },
    { map: "crypt", x: 0, y: -475 },
    { map: "crypt", x: -100, y: -475 },
    { map: "crypt", x: -200, y: -475 },
    { map: "crypt", x: -200, y: -575 },
    { map: "crypt", x: -200, y: -675 },
    { map: "crypt", x: -200, y: -775 },
    { map: "crypt", x: -200, y: -875 },
    { map: "crypt", x: -200, y: -975 },
    { map: "crypt", x: -200, y: -1075 },
    { map: "crypt", x: -100, y: -1075 },
    { map: "crypt", x: 0, y: -1075 },
    { map: "crypt", x: 100, y: -1075 },
    { map: "crypt", x: 200, y: -1075 },
    { map: "crypt", x: 300, y: -1075 },
    { map: "crypt", x: 375, y: -1075 },
    { map: "crypt", x: 375, y: -1175 },
    { map: "crypt", x: 375, y: -1275 },
    { map: "crypt", x: 375, y: -1375 },
    { map: "crypt", x: 375, y: -1475 },
    { map: "crypt", x: 475, y: -1475 },
    { map: "crypt", x: 575, y: -1475 },
    { map: "crypt", x: 675, y: -1475 },
    { map: "crypt", x: 775, y: -1475 },
    { map: "crypt", x: 875, y: -1475 },
    { map: "crypt", x: 975, y: -1475 },
    { map: "crypt", x: 1075, y: -1475 },
    { map: "crypt", x: 1175, y: -1475 },
    { map: "crypt", x: 1275, y: -1475 },
    { map: "crypt", x: 1375, y: -1475 },
    { map: "crypt", x: 1475, y: -1475 },
    { map: "crypt", x: 1575, y: -1475 },
    { map: "crypt", x: 1675, y: -1475 },
    { map: "crypt", x: 1775, y: -1475 },
    { map: "crypt", x: 1775, y: -1575 },
    { map: "crypt", x: 1775, y: -1675 },
    { map: "crypt", x: 1775, y: -1750 },
    { map: "crypt", x: 1875, y: -1750 },
    { map: "crypt", x: 1975, y: -1750 },
    { map: "crypt", x: 2075, y: -1750 },
    { map: "crypt", x: 2175, y: -1750 },
    { map: "crypt", x: 2275, y: -1750 },
    { map: "crypt", x: 2375, y: -1750 },
    { map: "crypt", x: 2475, y: -1750 },
    { map: "crypt", x: 2575, y: -1750 },
    { map: "crypt", x: 2675, y: -1750 },
    { map: "crypt", x: 2750, y: -1750 },
    { map: "crypt", x: 2750, y: -1650 },
    { map: "crypt", x: 2750, y: -1550 },
    { map: "crypt", x: 2750, y: -1450 },
    { map: "crypt", x: 2750, y: -1350 },
    { map: "crypt", x: 2750, y: -1250 },
    { map: "crypt", x: 2750, y: -1150 },
    { map: "crypt", x: 2750, y: -1075 },
    { map: "crypt", x: 2650, y: -1075 },
    { map: "crypt", x: 2550, y: -1075 },
    { map: "crypt", x: 2450, y: -1075 },
    { map: "crypt", x: 2350, y: -1075 },
    { map: "crypt", x: 2250, y: -1075 },
    { map: "crypt", x: 2150, y: -1075 },
    { map: "crypt", x: 2050, y: -1075 },
    { map: "crypt", x: 2050, y: -975 },
    { map: "crypt", x: 2050, y: -875 },
    { map: "crypt", x: 1950, y: -875 },
    { map: "crypt", x: 1850, y: -875 },
    { map: "crypt", x: 1750, y: -875 },
    { map: "crypt", x: 1650, y: -875 },
    { map: "crypt", x: 1550, y: -875 },
    { map: "crypt", x: 1450, y: -875 },
    { map: "crypt", x: 1450, y: -775 },
    { map: "crypt", x: 1450, y: -675 },
    { map: "crypt", x: 1450, y: -575 },
    { map: "crypt", x: 1450, y: -475 },
    { map: "crypt", x: 1450, y: -375 },
    { map: "crypt", x: 1350, y: -375 },
    { map: "crypt", x: 1250, y: -375 },
    { map: "crypt", x: 1150, y: -375 },
    { map: "crypt", x: 1050, y: -375 },
    { map: "crypt", x: 950, y: -375 },
    { map: "crypt", x: 950, y: -475 },
    { map: "crypt", x: 950, y: -575 },
    { map: "crypt", x: 950, y: -625 },
    { map: "crypt", x: 850, y: -625 },
    { map: "crypt", x: 750, y: -625 },
    { map: "crypt", x: 725, y: -625 },
    { map: "crypt", x: 725, y: -725 },
    { map: "crypt", x: 725, y: -825 },
    { map: "crypt", x: 725, y: -925 },
    { map: "crypt", x: 725, y: -1025 },
    { map: "crypt", x: 725, y: -1075 },
    { map: "crypt", x: 725, y: -975 },
    { map: "crypt", x: 725, y: -875 },
    { map: "crypt", x: 725, y: -775 },
    { map: "crypt", x: 725, y: -675 },
    { map: "crypt", x: 725, y: -625 },
    { map: "crypt", x: 825, y: -625 },
    { map: "crypt", x: 925, y: -625 },
    { map: "crypt", x: 1025, y: -625 },
    { map: "crypt", x: 1100, y: -625 },
    { map: "crypt", x: 1100, y: -525 },
    { map: "crypt", x: 1100, y: -425 },
    { map: "crypt", x: 1100, y: -375 },
    { map: "crypt", x: 1200, y: -375 },
    { map: "crypt", x: 1300, y: -375 },
    { map: "crypt", x: 1400, y: -375 },
    { map: "crypt", x: 1450, y: -375 },
    { map: "crypt", x: 1450, y: -475 },
    { map: "crypt", x: 1450, y: -575 },
    { map: "crypt", x: 1450, y: -675 },
    { map: "crypt", x: 1450, y: -775 },
    { map: "crypt", x: 1450, y: -875 },
    { map: "crypt", x: 1550, y: -875 },
    { map: "crypt", x: 1650, y: -875 },
    { map: "crypt", x: 1750, y: -875 },
    { map: "crypt", x: 1850, y: -875 },
    { map: "crypt", x: 1950, y: -875 },
    { map: "crypt", x: 2050, y: -875 },
    { map: "crypt", x: 2050, y: -775 },
    { map: "crypt", x: 2050, y: -675 },
    { map: "crypt", x: 2150, y: -675 },
    { map: "crypt", x: 2250, y: -675 },
    { map: "crypt", x: 2350, y: -675 },
    { map: "crypt", x: 2450, y: -675 },
    { map: "crypt", x: 2550, y: -675 },
    { map: "crypt", x: 2650, y: -675 },
    { map: "crypt", x: 2750, y: -675 },
    { map: "crypt", x: 2750, y: -575 },
    { map: "crypt", x: 2750, y: -475 },
    { map: "crypt", x: 2750, y: -375 },
    { map: "crypt", x: 2750, y: -275 },
    { map: "crypt", x: 2750, y: -175 },
    { map: "crypt", x: 2750, y: -150 },
    { map: "crypt", x: 2650, y: -150 },
    { map: "crypt", x: 2550, y: -150 },
    { map: "crypt", x: 2450, y: -150 },
    { map: "crypt", x: 2350, y: -150 },
    { map: "crypt", x: 2250, y: -150 },
    { map: "crypt", x: 2175, y: -150 },
    { map: "crypt", x: 2175, y: -50 },
    { map: "crypt", x: 2175, y: 50 },
    { map: "crypt", x: 2175, y: 150 },
    { map: "crypt", x: 2175, y: 250 },
    { map: "crypt", x: 2175, y: 325 },
    { map: "crypt", x: 2250, y: 350 },
    { map: "crypt", x: 2325, y: 375 },
    { map: "crypt", x: 2400, y: 400 },
    { map: "crypt", x: 2475, y: 425 },
    { map: "crypt", x: 2475, y: 425 },
    { map: "crypt", x: 2530, y: 395 },
    { map: "crypt", x: 2585, y: 365 },
    { map: "crypt", x: 2640, y: 335 },
    { map: "crypt", x: 2695, y: 305 },
    { map: "crypt", x: 2750, y: 275 }]

export function startCrypt(instance: string): CryptData {
    const data: CryptData = {
        instance: instance,
        remaining: {}
    }
    for (const monster of AL.Game.G.maps.crypt.monsters) {
        if (data[monster.type] === undefined) data.remaining[monster.type] = 0
        if (monster.count == 0) {
            // It's a special monster that will spawn after another type dies
            data.remaining[monster.type] += 1
        } else {
            data.remaining[monster.type] += monster.count
        }
    }
    return data
}

export function isCryptFinished(data: CryptData): boolean {
    if (data == undefined) return true // No crypt data, assume finished

    for (const m in data.remaining) {
        if (data.remaining[m as AL.MonsterName] !== 0) return false // Something remains
    }
    return true
}